<div id="exercise-js-module1-num-q4" style="display: none;">

<h3>Q. Valuation and Ownership After Equity Issuance</h3>

<p>
Erica owns all <strong><span id="founder_shares-q4"></span> million shares</strong> of her company, CoralTech.<br>
A new partner is offering to invest <strong>$<span id="partner_investment-q4"></span> million</strong> in exchange for 
<strong><span id="partner_shares-q4"></span> million shares</strong>.
</p>

::: {.question-block}
<form onsubmit="event.preventDefault(); checkAnswerQ4('module1_num_q4a', postMoneyQ4, feedbackTextQ4a);">
  <label for="module1_num_q4a"><strong>1. What is the post-money valuation (in million)?</strong></label>
  <input type="number" id="module1_num_q4a" placeholder="Enter value" step="any" style="width: 150px;" />
  <button type="submit">Check</button>
</form>
<div id="feedback-module1_num_q4a" class="feedback" style="display: none;"></div>
:::

::: {.question-block}
<form onsubmit="event.preventDefault(); checkAnswerQ4('module1_num_q4b', partnerPctQ4, feedbackTextQ4b);">
  <label for="module1_num_q4b"><strong>2. What percentage of the company will the new partner own?</strong></label>
  <input type="number" id="module1_num_q4b" placeholder="Enter %" step="any" style="width: 150px;" />
  <button type="submit">Check</button>
</form>
<div id="feedback-module1_num_q4b" class="feedback" style="display: none;"></div>
:::

</div>

<script>
// Variables for Q4
let postMoneyQ4, partnerPctQ4;
let feedbackTextQ4a, feedbackTextQ4b;

function generateExerciseQ4() {
  const founderShares = 4;
  const partnerShares = 1.5;
  const partnerInvestment = (Math.random() * 1 + 1.5).toFixed(3);
  const sharePrice = (partnerInvestment / partnerShares).toFixed(3);
  const totalShares = founderShares + partnerShares;

  postMoneyQ4 = (totalShares * sharePrice).toFixed(3);
  partnerPctQ4 = ((partnerShares / totalShares) * 100).toFixed(3);

  feedbackTextQ4a = `✅ Post-money = (${founderShares} + ${partnerShares}) × ${sharePrice} = <strong>${postMoneyQ4}</strong> million.`;
  feedbackTextQ4b = `✅ Partner Ownership = ${partnerShares} / (${founderShares} + ${partnerShares}) × 100 = <strong>${partnerPctQ4}%</strong>.`;

  // Inject values
  document.getElementById("founder_shares-q4").textContent = founderShares;
  document.getElementById("partner_investment-q4").textContent = partnerInvestment;
  document.getElementById("partner_shares-q4").textContent = partnerShares;

  document.getElementById("exercise-js-module1-num-q4").style.display = "block";
}

function checkAnswerQ4(inputId, correctValue, explanation) {
  const input = document.getElementById(inputId);
  const feedback = document.getElementById("feedback-" + inputId);
  const userAnswer = parseFloat(input.value);
  const correct = parseFloat(correctValue);
  const tolerance = 0.01;

  if (isNaN(userAnswer)) {
    feedback.textContent = "⚠️ Please enter a number.";
    feedback.style.color = "orange";
  } else if (Math.abs(userAnswer - correct) <= tolerance) {
    feedback.innerHTML = explanation;
    feedback.style.color = "green";
  } else {
    feedback.innerHTML = `❌ Incorrect. ${explanation}`;
    feedback.style.color = "red";
  }

  feedback.style.display = "block";
}

// Run after login
document.addEventListener("DOMContentLoaded", () => {
  const observer = new MutationObserver(() => {
    const afterLogin = document.getElementById("after-login-content");
    if (afterLogin && afterLogin.style.display === "block") {
      generateExerciseQ4();
      observer.disconnect();
    }
  });

  observer.observe(document.body, { attributes: true, childList: true, subtree: true });
});
</script>
