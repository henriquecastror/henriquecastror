getwd()
#| echo: false
payload <- list(
slide_id = "module5_num_qu1",
items = list(list(
question_id   = "module5_num_q1a",
qtype         = "num",
correct_value = -0.4,   # número (use ponto decimal)
tolerance     = 0.05,    # tolerância absoluta; NULL se não houver
points        = 2,
module        = "mod5"
))
)
res <- send_answer_key(payload, params$endpoint)
#| echo: false
payload <- list(
slide_id = "module5_num_qu1",
items = list(list(
question_id   = "module5_num_q1a",
qtype         = "num",
correct_value = -0.4,   # número (use ponto decimal)
tolerance     = 0.01,    # tolerância absoluta; NULL se não houver
points        = 2,
module        = "mod5"
))
)
res <- send_answer_key(payload, params$endpoint)
#| echo: false
#| message: false
# Helper: função para enviar payload
send_answer_key <- function(payload, endpoint) {
if (!requireNamespace("httr2", quietly = TRUE)) {
stop("Pacote 'httr2' não instalado. Instale com install.packages('httr2').")
}
admin_token <- Sys.getenv("ADMIN_TOKEN", unset = NA)
if (is.na(admin_token) || admin_token == "") {
stop("Variável de ambiente ADMIN_TOKEN não definida.")
}
req <- httr2::request(endpoint) |>
httr2::req_method("POST") |>
httr2::req_headers(
"content-type" = "application/json",
"x-admin-token" = admin_token
) |>
httr2::req_body_json(payload)
resp <- httr2::req_perform(req)
list(
status = httr2::resp_status(resp),
body   = tryCatch(httr2::resp_body_string(resp), error = function(e) "")
)
}
#| echo: false
payload <- list(
slide_id = "module5_num_qu1",
items = list(list(
question_id   = "module5_num_q1a",
qtype         = "num",
correct_value = -0.4,   # número (use ponto decimal)
tolerance     = 0.01,    # tolerância absoluta; NULL se não houver
points        = 2,
module        = "mod5"
))
)
res <- send_answer_key(payload, params$endpoint)
Sys.setenv(ADMIN_TOKEN="18317799tgA!")
#| echo: false
#| message: false
# Helper: função para enviar payload
send_answer_key <- function(payload, endpoint) {
if (!requireNamespace("httr2", quietly = TRUE)) {
stop("Pacote 'httr2' não instalado. Instale com install.packages('httr2').")
}
admin_token <- Sys.getenv("ADMIN_TOKEN", unset = NA)
if (is.na(admin_token) || admin_token == "") {
stop("Variável de ambiente ADMIN_TOKEN não definida.")
}
req <- httr2::request(endpoint) |>
httr2::req_method("POST") |>
httr2::req_headers(
"content-type" = "application/json",
"x-admin-token" = admin_token
) |>
httr2::req_body_json(payload)
resp <- httr2::req_perform(req)
list(
status = httr2::resp_status(resp),
body   = tryCatch(httr2::resp_body_string(resp), error = function(e) "")
)
}
#| echo: false
payload <- list(
slide_id = "module5_num_qu1",
items = list(list(
question_id   = "module5_num_q1a",
qtype         = "num",
correct_value = -0.4,   # número (use ponto decimal)
tolerance     = 0.01,    # tolerância absoluta; NULL se não houver
points        = 2,
module        = "mod5"
))
)
res <- send_answer_key(payload, params$endpoint)
cat("→ module5_num_q301 | HTTP:", res$status, "\n", res$body)
