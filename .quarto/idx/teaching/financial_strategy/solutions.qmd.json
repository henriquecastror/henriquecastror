{"title":"Helper: função para enviar payload","markdown":{"yaml":{"params":{"endpoint":"https://course-chat.hcmrtns.workers.dev/exercises/answer-key","send":true}},"headingText":"Helper: função para enviar payload","containsRefs":false,"markdown":"\n\n\n```{r}\n#| echo: false\n#| message: false\nsend_answer_key <- function(payload, endpoint) {\n  if (!requireNamespace(\"httr2\", quietly = TRUE)) {\n    stop(\"Pacote 'httr2' não instalado. Instale com install.packages('httr2').\")\n  }\n  admin_token <- Sys.getenv(\"ADMIN_TOKEN\", unset = NA)\n  if (is.na(admin_token) || admin_token == \"\") {\n  stop(\"Variável de ambiente ADMIN_TOKEN não definida.\")\n  }\n\n  req <- httr2::request(endpoint) |>\n    httr2::req_method(\"POST\") |>\n    httr2::req_headers(\n      \"content-type\" = \"application/json\",\n      \"x-admin-token\" = admin_token\n    ) |>\n    httr2::req_body_json(payload)\n  resp <- httr2::req_perform(req)\n  list(\n    status = httr2::resp_status(resp),\n    body   = tryCatch(httr2::resp_body_string(resp), error = function(e) \"\")\n  )\n}\n```\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module5_num_qu1\",\n  items = list(list(\n    question_id   = \"module5_num_q1a\",\n    qtype         = \"num\",\n    correct_value = -0.04,   # número (use ponto decimal)\n    tolerance     = 0.05,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod5\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module5_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module5_num_qu1\",\n  items = list(list(\n    question_id   = \"module5_num_q1b\",\n    qtype         = \"num\",\n    correct_value = 2.90,   # número (use ponto decimal)\n    tolerance     = 0.1,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod5\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module5_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module5_num_qu1\",\n  items = list(list(\n    question_id   = \"module5_num_q1c\",\n    qtype         = \"num\",\n    correct_value = 2.15,   # número (use ponto decimal)\n    tolerance     = 0.1,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod5\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module5_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module5_num_qu1\",\n  items = list(list(\n    question_id   = \"module5_num_q6a\",\n    qtype         = \"num\",\n    correct_value = 8.86,   # número (use ponto decimal)\n    tolerance     = 0.1,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod5\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module5_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module5_num_qu1\",\n  items = list(list(\n    question_id   = \"module5_num_q6b\",\n    qtype         = \"num\",\n    correct_value = 0.6,   # número (use ponto decimal)\n    tolerance     = 0.1,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod5\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module5_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\nstop\n\n\n\n```{r}\n#| echo: false\n\npayload <- list(\n  slide_id = \"module4_quiz1\",\n  items = list(list(\n    question_id   = \"module4_tf_q101\",\n    qtype         = \"tf\",\n    correct_value = \"T\",\n    tolerance     = NULL,\n    points        = 1,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_tf_q101 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n```{r}\n\n#| echo: false\npayload <- list(\n  slide_id = \"module4_quiz2\",   # slide/página onde essa questão aparece\n  items = list(list(\n    question_id   = \"module4_mcq_q201\",\n    qtype         = \"mcq\",\n    correct_value = \"B\",         # letra A..E (maiúscula)\n    tolerance     = NULL,        # sempre NULL para mcq\n    points        = 1,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_mcq_q201 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_quiz3\",\n  items = list(list(\n    question_id   = \"module4_num_q301\",\n    qtype         = \"num\",\n    correct_value = 14.88,   # número (use ponto decimal)\n    tolerance     = 0.10,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_q1\",\n  items = list(list(\n    question_id   = \"module4_num_q8a\",\n    qtype         = \"num\",\n    correct_value = 0.92,   # número (use ponto decimal)\n    tolerance     = 0.010,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_q1\",\n  items = list(list(\n    question_id   = \"module4_num_q8b\",\n    qtype         = \"num\",\n    correct_value = 0.92,   # número (use ponto decimal)\n    tolerance     = 0.010,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_q1\",\n  items = list(list(\n    question_id   = \"module4_num_q8c\",\n    qtype         = \"num\",\n    correct_value = 0.92,   # número (use ponto decimal)\n    tolerance     = 0.010,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_num_q8a\",\n    qtype         = \"num\",\n    correct_value = 1.16,   # número (use ponto decimal)\n    tolerance     = 0.01,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q8a | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_num_q12a\",\n    qtype         = \"num\",\n    correct_value = 2.45,   # número (use ponto decimal)\n    tolerance     = 0.02,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q8a | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_num_q12b\",\n    qtype         = \"num\",\n    correct_value = 3.08,   # número (use ponto decimal)\n    tolerance     = 0.02,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q8a | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_num_q13a\",\n    qtype         = \"num\",\n    correct_value = 5.80,   # número (use ponto decimal)\n    tolerance     = 0.02,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q8a | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_num_q13b\",\n    qtype         = \"num\",\n    correct_value = 8.69,   # número (use ponto decimal)\n    tolerance     = 0.02,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q8a | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\n\n\n\n\n```{r}\n#| echo: false\n\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_tf_q43\",\n    qtype         = \"tf\",\n    correct_value = \"F\",\n    tolerance     = NULL,\n    points        = 1,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_tf_q101 | HTTP:\", res$status, \"\\n\", res$body)\n\n\n```\n\n\n\n\n\n\n```{r}\n#| echo: false\n\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_tf_q46\",\n    qtype         = \"tf\",\n    correct_value = \"T\",\n    tolerance     = NULL,\n    points        = 1,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_tf_q101 | HTTP:\", res$status, \"\\n\", res$body)\n\n\n```\n\n\n\n\n\n\n```{r}\n#| echo: false\n\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_tf_q81\",\n    qtype         = \"tf\",\n    correct_value = \"F\",\n    tolerance     = NULL,\n    points        = 1,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_tf_q101 | HTTP:\", res$status, \"\\n\", res$body)\n\n\n```","srcMarkdownNoYaml":"\n\n\n```{r}\n#| echo: false\n#| message: false\n# Helper: função para enviar payload\nsend_answer_key <- function(payload, endpoint) {\n  if (!requireNamespace(\"httr2\", quietly = TRUE)) {\n    stop(\"Pacote 'httr2' não instalado. Instale com install.packages('httr2').\")\n  }\n  admin_token <- Sys.getenv(\"ADMIN_TOKEN\", unset = NA)\n  if (is.na(admin_token) || admin_token == \"\") {\n  stop(\"Variável de ambiente ADMIN_TOKEN não definida.\")\n  }\n\n  req <- httr2::request(endpoint) |>\n    httr2::req_method(\"POST\") |>\n    httr2::req_headers(\n      \"content-type\" = \"application/json\",\n      \"x-admin-token\" = admin_token\n    ) |>\n    httr2::req_body_json(payload)\n  resp <- httr2::req_perform(req)\n  list(\n    status = httr2::resp_status(resp),\n    body   = tryCatch(httr2::resp_body_string(resp), error = function(e) \"\")\n  )\n}\n```\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module5_num_qu1\",\n  items = list(list(\n    question_id   = \"module5_num_q1a\",\n    qtype         = \"num\",\n    correct_value = -0.04,   # número (use ponto decimal)\n    tolerance     = 0.05,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod5\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module5_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module5_num_qu1\",\n  items = list(list(\n    question_id   = \"module5_num_q1b\",\n    qtype         = \"num\",\n    correct_value = 2.90,   # número (use ponto decimal)\n    tolerance     = 0.1,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod5\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module5_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module5_num_qu1\",\n  items = list(list(\n    question_id   = \"module5_num_q1c\",\n    qtype         = \"num\",\n    correct_value = 2.15,   # número (use ponto decimal)\n    tolerance     = 0.1,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod5\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module5_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module5_num_qu1\",\n  items = list(list(\n    question_id   = \"module5_num_q6a\",\n    qtype         = \"num\",\n    correct_value = 8.86,   # número (use ponto decimal)\n    tolerance     = 0.1,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod5\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module5_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module5_num_qu1\",\n  items = list(list(\n    question_id   = \"module5_num_q6b\",\n    qtype         = \"num\",\n    correct_value = 0.6,   # número (use ponto decimal)\n    tolerance     = 0.1,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod5\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module5_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\nstop\n\n\n\n```{r}\n#| echo: false\n\npayload <- list(\n  slide_id = \"module4_quiz1\",\n  items = list(list(\n    question_id   = \"module4_tf_q101\",\n    qtype         = \"tf\",\n    correct_value = \"T\",\n    tolerance     = NULL,\n    points        = 1,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_tf_q101 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n```{r}\n\n#| echo: false\npayload <- list(\n  slide_id = \"module4_quiz2\",   # slide/página onde essa questão aparece\n  items = list(list(\n    question_id   = \"module4_mcq_q201\",\n    qtype         = \"mcq\",\n    correct_value = \"B\",         # letra A..E (maiúscula)\n    tolerance     = NULL,        # sempre NULL para mcq\n    points        = 1,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_mcq_q201 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_quiz3\",\n  items = list(list(\n    question_id   = \"module4_num_q301\",\n    qtype         = \"num\",\n    correct_value = 14.88,   # número (use ponto decimal)\n    tolerance     = 0.10,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_q1\",\n  items = list(list(\n    question_id   = \"module4_num_q8a\",\n    qtype         = \"num\",\n    correct_value = 0.92,   # número (use ponto decimal)\n    tolerance     = 0.010,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_q1\",\n  items = list(list(\n    question_id   = \"module4_num_q8b\",\n    qtype         = \"num\",\n    correct_value = 0.92,   # número (use ponto decimal)\n    tolerance     = 0.010,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_q1\",\n  items = list(list(\n    question_id   = \"module4_num_q8c\",\n    qtype         = \"num\",\n    correct_value = 0.92,   # número (use ponto decimal)\n    tolerance     = 0.010,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q301 | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_num_q8a\",\n    qtype         = \"num\",\n    correct_value = 1.16,   # número (use ponto decimal)\n    tolerance     = 0.01,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q8a | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_num_q12a\",\n    qtype         = \"num\",\n    correct_value = 2.45,   # número (use ponto decimal)\n    tolerance     = 0.02,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q8a | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_num_q12b\",\n    qtype         = \"num\",\n    correct_value = 3.08,   # número (use ponto decimal)\n    tolerance     = 0.02,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q8a | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_num_q13a\",\n    qtype         = \"num\",\n    correct_value = 5.80,   # número (use ponto decimal)\n    tolerance     = 0.02,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q8a | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\n```{r}\n#| echo: false\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_num_q13b\",\n    qtype         = \"num\",\n    correct_value = 8.69,   # número (use ponto decimal)\n    tolerance     = 0.02,    # tolerância absoluta; NULL se não houver\n    points        = 2,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_num_q8a | HTTP:\", res$status, \"\\n\", res$body)\n```\n\n\n\n\n\n\n\n\n\n```{r}\n#| echo: false\n\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_tf_q43\",\n    qtype         = \"tf\",\n    correct_value = \"F\",\n    tolerance     = NULL,\n    points        = 1,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_tf_q101 | HTTP:\", res$status, \"\\n\", res$body)\n\n\n```\n\n\n\n\n\n\n```{r}\n#| echo: false\n\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_tf_q46\",\n    qtype         = \"tf\",\n    correct_value = \"T\",\n    tolerance     = NULL,\n    points        = 1,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_tf_q101 | HTTP:\", res$status, \"\\n\", res$body)\n\n\n```\n\n\n\n\n\n\n```{r}\n#| echo: false\n\npayload <- list(\n  slide_id = \"module4_num_qu2\",\n  items = list(list(\n    question_id   = \"module4_tf_q81\",\n    qtype         = \"tf\",\n    correct_value = \"F\",\n    tolerance     = NULL,\n    points        = 1,\n    module        = \"mod4\"\n  ))\n)\nres <- send_answer_key(payload, params$endpoint)\ncat(\"→ module4_tf_q101 | HTTP:\", res$status, \"\\n\", res$body)\n\n\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"canonical-url":"https://henriquemartins.net/"},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../include/webex.css"],"include-after-body":["../../include/webex.js"],"output-file":"solutions.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.549","html":{"css":"webex.css","include-after-body":"webex.js"},"editor":"visual","theme":"litera","params":{"endpoint":"https://course-chat.hcmrtns.workers.dev/exercises/answer-key","send":true}},"extensions":{"book":{"multiFile":true}}},"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","output-file":"solutions.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.4.549","auto-stretch":true,"html":{"css":"webex.css","include-after-body":"webex.js"},"editor":"visual","params":{"endpoint":"https://course-chat.hcmrtns.workers.dev/exercises/answer-key","send":true}}}},"projectFormats":["html","revealjs"]}