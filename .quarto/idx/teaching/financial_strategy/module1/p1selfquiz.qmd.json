{"title":"Self-quiz — Module 1","markdown":{"yaml":{"title":"Self-quiz — Module 1","format":{"html":{"toc":false,"embed-resources":false,"include-before-body":"../login-start.html","include-after-body":"../login-end.html"}}},"containsRefs":false,"markdown":"\n\n```{=html}\n<style>\n  :root{--ink:#111827;--muted:#6b7280;--line:#e5e7eb;--card:#f8fafc;--brand:#4f46e5}\n  .sq-wrap{max-width:880px;margin:0 auto}\n  .sq-head{display:flex;justify-content:space-between;align-items:center;gap:12px}\n  .sq-muted{color:var(--muted);font-size:14px}\n  .sq-card{background:var(--card);border:1px solid var(--line);border-radius:12px;padding:16px;margin:12px 0}\n  .sq-qnum{font-weight:600;margin-bottom:6px}\n  .sq-stem{margin:8px 0 10px}\n  .sq-opt{display:flex;gap:10px;align-items:flex-start;border:1px solid var(--line);border-radius:10px;padding:10px;margin:8px 0;cursor:pointer}\n  .sq-opt input{margin-top:3px}\n  .sq-actions{display:flex;gap:10px;align-items:center;margin-top:16px}\n  .sq-btn{padding:10px 14px;border-radius:10px;border:1px solid var(--line);cursor:pointer;background:#fff}\n  .sq-btn.primary{background:var(--brand);border-color:var(--brand);color:#fff}\n  .sq-pill{padding:6px 10px;border:1px solid var(--line);border-radius:999px;background:#eef2ff;font-size:12px}\n  .sq-timer{font-variant-numeric:tabular-nums}\n  .sq-warn{background:#fff7ed;border:1px solid #fed7aa;color:#9a3412;padding:10px;border-radius:10px;margin:10px 0}\n  .sq-err{background:#fef2f2;border:1px solid #fecaca;color:#991b1b;padding:10px;border-radius:10px;margin:10px 0}\n  .sq-ok{background:#ecfdf5;border:1px solid #bbf7d0;color:#065f46;padding:10px;border-radius:10px;margin:10px 0}\n</style>\n\n\n<div class=\"sq-wrap\">\n  <header class=\"sq-head\">\n    <div>\n      <h2 style=\"margin:0\">Self-quiz</h2>\n      <div class=\"sq-muted\" id=\"sq-subtitle\">Preparing…</div>\n    </div>\n    <div class=\"sq-pill sq-timer\" id=\"sq-timer\">--:--</div>\n  </header>\n\n  <div id=\"sq-alerts\"></div>\n  <div id=\"sq-quiz\"></div>\n\n  <div class=\"sq-actions\">\n    <button id=\"sq-submit\" class=\"sq-btn primary\" disabled>Submit answers</button>\n    <button id=\"sq-save\" class=\"sq-btn\" disabled>Save draft</button>\n    <span class=\"sq-muted\" id=\"sq-status\"></span>\n  </div>\n</div>\n\n<script>\n(function(){\n  // ========= Config =========\n  const API_BASE        = (window.SELFQUIZ_API_BASE || \"https://course-chat.hcmrtns.workers.dev\").replace(/\\/+$/,'');\n  const DEFAULT_TRACK   = \"module\";    // \"module\" (prática)\n  const DEFAULT_MODULE  = \"module1\";   // ajuste para module2/3/4/5 conforme o arquivo\n  const DEFAULT_N       = 10;\n\n  // ========= Utils: login compatível com seu gate =========\n  const stripDiacritics = s => (s || '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  const normalizeLogin  = s => {\n    const raw = String(s || '').trim().toLowerCase();\n    if (!raw) return '';\n    return raw.includes('@') ? raw.split('@')[0] : raw;\n  };\n\n  function readFromStorage(){\n    try{\n      const keys = ['student_login','vhcm_current_user','current_user','user_login','login','user'];\n      for (const k of keys){\n        const v = normalizeLogin(stripDiacritics(localStorage.getItem(k) || sessionStorage.getItem(k) || ''));\n        if (v) return v;\n      }\n    }catch{}\n    return '';\n  }\n  function readFromGlobals(){\n    try{\n      const cand = [\n        window.CURRENT_USER,\n        window.VHCM_CURRENT_USER,\n        window.__VHCM && window.__VHCM.currentUser,\n        window.__vhcm && window.__vhcm.user && window.__vhcm.user.login\n      ];\n      for (const c of cand){\n        const v = normalizeLogin(stripDiacritics(c || ''));\n        if (v) return v;\n      }\n    }catch{}\n    return '';\n  }\n  function readFromCookies(){\n    try{\n      const map = Object.fromEntries((document.cookie || '').split(';').filter(Boolean).map(s=>{\n        const [k,...r]=s.split('=');\n        return [k.trim(), decodeURIComponent((r.join('=')||'').trim())];\n      }));\n      for (const k of ['student_login','vhcm_current_user','login']){\n        const v = normalizeLogin(stripDiacritics(map[k] || ''));\n        if (v) return v;\n      }\n    }catch{}\n    return '';\n  }\n  function getCurrentUser(){ return readFromStorage() || readFromGlobals() || readFromCookies() || ''; }\n\n  function waitForLogin(maxWaitMs = 8000){\n    return new Promise(resolve => {\n      let u = getCurrentUser();\n      if (u) return resolve(u);\n\n      let done = false;\n      const finish = (v) => { if(!done){ done=true; resolve(v||''); cleanup(); } };\n\n      const onEvt = () => finish(getCurrentUser());\n      const onStorage = (e) => {\n        if (['student_login','vhcm_current_user','current_user','user_login','login','user'].includes(e.key||'')) {\n          finish(getCurrentUser());\n        }\n      };\n      window.addEventListener('vhcm:login', onEvt);\n      window.addEventListener('storage', onStorage);\n\n      const start = Date.now();\n      const iv = setInterval(()=>{\n        u = getCurrentUser();\n        if (u) finish(u);\n        if (Date.now() - start > maxWaitMs) finish('');\n      }, 200);\n\n      function cleanup(){\n        try{ window.removeEventListener('vhcm:login', onEvt); }catch{}\n        try{ window.removeEventListener('storage', onStorage); }catch{}\n        try{ clearInterval(iv); }catch{}\n      }\n    });\n  }\n\n  // ========= Elements =========\n  const $ = id => document.getElementById(id);\n  const subtitle = $(\"sq-subtitle\");\n  const alerts   = $(\"sq-alerts\");\n  const quizRoot = $(\"sq-quiz\");\n  const btnSubmit= $(\"sq-submit\");\n  const btnSave  = $(\"sq-save\");\n  const statusEl = $(\"sq-status\");\n  const timerEl  = $(\"sq-timer\");\n\n  const alert = (cls,msg)=>{ const d=document.createElement('div'); d.className=cls; d.textContent=msg; alerts.appendChild(d); };\n  const setStatus = (m)=>{ statusEl.textContent = m; };\n  const enableActions = (on)=>{ btnSubmit.disabled=!on; btnSave.disabled=!on; };\n\n  // ========= Flow =========\n  (async function init(){\n    const student_id = await waitForLogin();\n    if(!student_id){\n      subtitle.textContent = \"Login not detected. Please refresh after logging in.\";\n      alert(\"sq-warn\",\"Could not detect your login. If your name appears above, just refresh.\");\n      return;\n    }\n\n    subtitle.textContent = \"Starting attempt…\";\n\n    const payload = { student_id, track: DEFAULT_TRACK, module: DEFAULT_MODULE, n_mcq: DEFAULT_N };\n    const startRes = await safeJsonPost(API_BASE + \"/selfquiz/attempt/start\", payload);\n\n    if(!startRes || !startRes.ok){\n      subtitle.textContent = (startRes && (startRes.error || startRes.message)) || \"Could not start attempt.\";\n      alert(\"sq-err\", subtitle.textContent);\n      return;\n    }\n\n    const attempt_id = startRes.attempt_id;\n    const timeLimit  = Number(startRes.time_limit_sec || 1200);\n    const qids       = Array.isArray(startRes.question_ids) ? startRes.question_ids : [];\n\n    subtitle.textContent = `Attempt started (module: ${startRes.module || DEFAULT_MODULE}).`;\n\n    if(!qids.length){\n      alert(\"sq-warn\",\"No questions were drawn. Check the pool/config on the backend.\");\n      return;\n    }\n\n    const qdata = await safeJsonGet(API_BASE + \"/selfquiz/questions?ids=\" + encodeURIComponent(qids.join(\",\")));\n    const items = (qdata && Array.isArray(qdata.items)) ? qdata.items : [];\n    if(!items.length){\n      alert(\"sq-err\",\"Failed to load questions. Check /selfquiz/questions.\");\n      return;\n    }\n\n    renderQuiz(items);\n    enableActions(true);\n    restoreDraft(attempt_id);\n    startTimer(timeLimit, submitNow);\n\n    btnSave.onclick   = () => { localStorage.setItem(\"sq_\"+attempt_id, JSON.stringify(readAnswers())); setStatus(\"Draft saved.\"); };\n    btnSubmit.onclick = submitNow;\n\n    async function submitNow(){\n      enableActions(false);\n      const answers = readAnswers();\n      const res = await safeJsonPost(API_BASE + \"/selfquiz/attempt/submit\", { attempt_id, answers });\n      if(!res || !res.ok){\n        setStatus(\"Submit failed. Please try again.\");\n        enableActions(true);\n        return;\n      }\n      setStatus(`Submitted! Score: ${res.score} / ${res.max_score}.`);\n      try{ localStorage.removeItem(\"sq_\"+attempt_id); }catch{}\n    }\n  })();\n\n  // ========= Render/helpers =========\n  function renderQuiz(items){\n    quizRoot.innerHTML = \"\";\n    items.forEach((q,i) => {\n      const card = document.createElement(\"div\");\n      card.className = \"sq-card\";\n      card.innerHTML = `\n        <div class=\"sq-qnum\">Q${i+1}</div>\n        <div class=\"sq-stem\">${escapeHtml(q.stem || q.question || \"\")}</div>\n        <div class=\"sq-opts\">\n          ${opt(q,\"A\")}${opt(q,\"B\")}${opt(q,\"C\")}${opt(q,\"D\")}${opt(q,\"E\")}\n        </div>`;\n      quizRoot.appendChild(card);\n    });\n  }\n  function opt(q,l){\n    const t = (q.options && q.options[l]) || \"\";\n    if(!t) return \"\";\n    return `<label class=\"sq-opt\">\n      <input type=\"radio\" name=\"${escapeAttr(q.question_id)}\" value=\"${l}\">\n      <div><strong>${l})</strong> ${escapeHtml(t)}</div>\n    </label>`;\n  }\n  function readAnswers(){\n    const out = {};\n    quizRoot.querySelectorAll('input[type=\"radio\"]:checked').forEach(inp => { out[inp.name] = inp.value; });\n    return out;\n  }\n  function restoreDraft(id){\n    try{\n      const raw = localStorage.getItem(\"sq_\"+id);\n      if(!raw) return;\n      const saved = JSON.parse(raw) || {};\n      Object.entries(saved).forEach(([qid, letter]) => {\n        const sel = `#sq-quiz input[type=\"radio\"][name=\"${cssEscape(qid)}\"][value=\"${letter}\"]`;\n        const el  = document.querySelector(sel);\n        if (el) el.checked = true;\n      });\n      alert(\"sq-ok\",\"Draft restored.\");\n    }catch{}\n  }\n  function startTimer(s,onEnd){\n    let left = Number(s) || 0;\n    const tick = () => {\n      const m = String(Math.floor(left/60)).padStart(2,\"0\");\n      const ss= String(left%60).padStart(2,\"0\");\n      document.getElementById(\"sq-timer\").textContent = m+\":\"+ss;\n      if(left<=0) onEnd(); else { left--; setTimeout(tick,1000); }\n    };\n    tick();\n  }\n\n  // ========= HTTP & escaping =========\n  async function safeJsonGet(u){ try{ const r=await fetch(u); if(!r.ok) return null; return await r.json(); }catch{ return null; } }\n  async function safeJsonPost(u,b){\n    try{\n      const r=await fetch(u,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(b)});\n      if(!r.ok) return null;\n      return await r.json();\n    }catch{ return null; }\n  }\n  function escapeHtml(s){ return String(s||\"\").replace(/[&<>\"']/g,m=>({'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;',\"'\":'&#39;'}[m])); }\n  function escapeAttr(s){ return String(s||\"\").replace(/\"/g,'&quot;').replace(/'/g,'&#39;'); }\n  function cssEscape(s){ return String(s||\"\").replace(/([\"\\\\\\]\\\\])/g,\"\\\\$1\"); }\n})();\n</script>\n","srcMarkdownNoYaml":"\n\n```{=html}\n<style>\n  :root{--ink:#111827;--muted:#6b7280;--line:#e5e7eb;--card:#f8fafc;--brand:#4f46e5}\n  .sq-wrap{max-width:880px;margin:0 auto}\n  .sq-head{display:flex;justify-content:space-between;align-items:center;gap:12px}\n  .sq-muted{color:var(--muted);font-size:14px}\n  .sq-card{background:var(--card);border:1px solid var(--line);border-radius:12px;padding:16px;margin:12px 0}\n  .sq-qnum{font-weight:600;margin-bottom:6px}\n  .sq-stem{margin:8px 0 10px}\n  .sq-opt{display:flex;gap:10px;align-items:flex-start;border:1px solid var(--line);border-radius:10px;padding:10px;margin:8px 0;cursor:pointer}\n  .sq-opt input{margin-top:3px}\n  .sq-actions{display:flex;gap:10px;align-items:center;margin-top:16px}\n  .sq-btn{padding:10px 14px;border-radius:10px;border:1px solid var(--line);cursor:pointer;background:#fff}\n  .sq-btn.primary{background:var(--brand);border-color:var(--brand);color:#fff}\n  .sq-pill{padding:6px 10px;border:1px solid var(--line);border-radius:999px;background:#eef2ff;font-size:12px}\n  .sq-timer{font-variant-numeric:tabular-nums}\n  .sq-warn{background:#fff7ed;border:1px solid #fed7aa;color:#9a3412;padding:10px;border-radius:10px;margin:10px 0}\n  .sq-err{background:#fef2f2;border:1px solid #fecaca;color:#991b1b;padding:10px;border-radius:10px;margin:10px 0}\n  .sq-ok{background:#ecfdf5;border:1px solid #bbf7d0;color:#065f46;padding:10px;border-radius:10px;margin:10px 0}\n</style>\n\n\n<div class=\"sq-wrap\">\n  <header class=\"sq-head\">\n    <div>\n      <h2 style=\"margin:0\">Self-quiz</h2>\n      <div class=\"sq-muted\" id=\"sq-subtitle\">Preparing…</div>\n    </div>\n    <div class=\"sq-pill sq-timer\" id=\"sq-timer\">--:--</div>\n  </header>\n\n  <div id=\"sq-alerts\"></div>\n  <div id=\"sq-quiz\"></div>\n\n  <div class=\"sq-actions\">\n    <button id=\"sq-submit\" class=\"sq-btn primary\" disabled>Submit answers</button>\n    <button id=\"sq-save\" class=\"sq-btn\" disabled>Save draft</button>\n    <span class=\"sq-muted\" id=\"sq-status\"></span>\n  </div>\n</div>\n\n<script>\n(function(){\n  // ========= Config =========\n  const API_BASE        = (window.SELFQUIZ_API_BASE || \"https://course-chat.hcmrtns.workers.dev\").replace(/\\/+$/,'');\n  const DEFAULT_TRACK   = \"module\";    // \"module\" (prática)\n  const DEFAULT_MODULE  = \"module1\";   // ajuste para module2/3/4/5 conforme o arquivo\n  const DEFAULT_N       = 10;\n\n  // ========= Utils: login compatível com seu gate =========\n  const stripDiacritics = s => (s || '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  const normalizeLogin  = s => {\n    const raw = String(s || '').trim().toLowerCase();\n    if (!raw) return '';\n    return raw.includes('@') ? raw.split('@')[0] : raw;\n  };\n\n  function readFromStorage(){\n    try{\n      const keys = ['student_login','vhcm_current_user','current_user','user_login','login','user'];\n      for (const k of keys){\n        const v = normalizeLogin(stripDiacritics(localStorage.getItem(k) || sessionStorage.getItem(k) || ''));\n        if (v) return v;\n      }\n    }catch{}\n    return '';\n  }\n  function readFromGlobals(){\n    try{\n      const cand = [\n        window.CURRENT_USER,\n        window.VHCM_CURRENT_USER,\n        window.__VHCM && window.__VHCM.currentUser,\n        window.__vhcm && window.__vhcm.user && window.__vhcm.user.login\n      ];\n      for (const c of cand){\n        const v = normalizeLogin(stripDiacritics(c || ''));\n        if (v) return v;\n      }\n    }catch{}\n    return '';\n  }\n  function readFromCookies(){\n    try{\n      const map = Object.fromEntries((document.cookie || '').split(';').filter(Boolean).map(s=>{\n        const [k,...r]=s.split('=');\n        return [k.trim(), decodeURIComponent((r.join('=')||'').trim())];\n      }));\n      for (const k of ['student_login','vhcm_current_user','login']){\n        const v = normalizeLogin(stripDiacritics(map[k] || ''));\n        if (v) return v;\n      }\n    }catch{}\n    return '';\n  }\n  function getCurrentUser(){ return readFromStorage() || readFromGlobals() || readFromCookies() || ''; }\n\n  function waitForLogin(maxWaitMs = 8000){\n    return new Promise(resolve => {\n      let u = getCurrentUser();\n      if (u) return resolve(u);\n\n      let done = false;\n      const finish = (v) => { if(!done){ done=true; resolve(v||''); cleanup(); } };\n\n      const onEvt = () => finish(getCurrentUser());\n      const onStorage = (e) => {\n        if (['student_login','vhcm_current_user','current_user','user_login','login','user'].includes(e.key||'')) {\n          finish(getCurrentUser());\n        }\n      };\n      window.addEventListener('vhcm:login', onEvt);\n      window.addEventListener('storage', onStorage);\n\n      const start = Date.now();\n      const iv = setInterval(()=>{\n        u = getCurrentUser();\n        if (u) finish(u);\n        if (Date.now() - start > maxWaitMs) finish('');\n      }, 200);\n\n      function cleanup(){\n        try{ window.removeEventListener('vhcm:login', onEvt); }catch{}\n        try{ window.removeEventListener('storage', onStorage); }catch{}\n        try{ clearInterval(iv); }catch{}\n      }\n    });\n  }\n\n  // ========= Elements =========\n  const $ = id => document.getElementById(id);\n  const subtitle = $(\"sq-subtitle\");\n  const alerts   = $(\"sq-alerts\");\n  const quizRoot = $(\"sq-quiz\");\n  const btnSubmit= $(\"sq-submit\");\n  const btnSave  = $(\"sq-save\");\n  const statusEl = $(\"sq-status\");\n  const timerEl  = $(\"sq-timer\");\n\n  const alert = (cls,msg)=>{ const d=document.createElement('div'); d.className=cls; d.textContent=msg; alerts.appendChild(d); };\n  const setStatus = (m)=>{ statusEl.textContent = m; };\n  const enableActions = (on)=>{ btnSubmit.disabled=!on; btnSave.disabled=!on; };\n\n  // ========= Flow =========\n  (async function init(){\n    const student_id = await waitForLogin();\n    if(!student_id){\n      subtitle.textContent = \"Login not detected. Please refresh after logging in.\";\n      alert(\"sq-warn\",\"Could not detect your login. If your name appears above, just refresh.\");\n      return;\n    }\n\n    subtitle.textContent = \"Starting attempt…\";\n\n    const payload = { student_id, track: DEFAULT_TRACK, module: DEFAULT_MODULE, n_mcq: DEFAULT_N };\n    const startRes = await safeJsonPost(API_BASE + \"/selfquiz/attempt/start\", payload);\n\n    if(!startRes || !startRes.ok){\n      subtitle.textContent = (startRes && (startRes.error || startRes.message)) || \"Could not start attempt.\";\n      alert(\"sq-err\", subtitle.textContent);\n      return;\n    }\n\n    const attempt_id = startRes.attempt_id;\n    const timeLimit  = Number(startRes.time_limit_sec || 1200);\n    const qids       = Array.isArray(startRes.question_ids) ? startRes.question_ids : [];\n\n    subtitle.textContent = `Attempt started (module: ${startRes.module || DEFAULT_MODULE}).`;\n\n    if(!qids.length){\n      alert(\"sq-warn\",\"No questions were drawn. Check the pool/config on the backend.\");\n      return;\n    }\n\n    const qdata = await safeJsonGet(API_BASE + \"/selfquiz/questions?ids=\" + encodeURIComponent(qids.join(\",\")));\n    const items = (qdata && Array.isArray(qdata.items)) ? qdata.items : [];\n    if(!items.length){\n      alert(\"sq-err\",\"Failed to load questions. Check /selfquiz/questions.\");\n      return;\n    }\n\n    renderQuiz(items);\n    enableActions(true);\n    restoreDraft(attempt_id);\n    startTimer(timeLimit, submitNow);\n\n    btnSave.onclick   = () => { localStorage.setItem(\"sq_\"+attempt_id, JSON.stringify(readAnswers())); setStatus(\"Draft saved.\"); };\n    btnSubmit.onclick = submitNow;\n\n    async function submitNow(){\n      enableActions(false);\n      const answers = readAnswers();\n      const res = await safeJsonPost(API_BASE + \"/selfquiz/attempt/submit\", { attempt_id, answers });\n      if(!res || !res.ok){\n        setStatus(\"Submit failed. Please try again.\");\n        enableActions(true);\n        return;\n      }\n      setStatus(`Submitted! Score: ${res.score} / ${res.max_score}.`);\n      try{ localStorage.removeItem(\"sq_\"+attempt_id); }catch{}\n    }\n  })();\n\n  // ========= Render/helpers =========\n  function renderQuiz(items){\n    quizRoot.innerHTML = \"\";\n    items.forEach((q,i) => {\n      const card = document.createElement(\"div\");\n      card.className = \"sq-card\";\n      card.innerHTML = `\n        <div class=\"sq-qnum\">Q${i+1}</div>\n        <div class=\"sq-stem\">${escapeHtml(q.stem || q.question || \"\")}</div>\n        <div class=\"sq-opts\">\n          ${opt(q,\"A\")}${opt(q,\"B\")}${opt(q,\"C\")}${opt(q,\"D\")}${opt(q,\"E\")}\n        </div>`;\n      quizRoot.appendChild(card);\n    });\n  }\n  function opt(q,l){\n    const t = (q.options && q.options[l]) || \"\";\n    if(!t) return \"\";\n    return `<label class=\"sq-opt\">\n      <input type=\"radio\" name=\"${escapeAttr(q.question_id)}\" value=\"${l}\">\n      <div><strong>${l})</strong> ${escapeHtml(t)}</div>\n    </label>`;\n  }\n  function readAnswers(){\n    const out = {};\n    quizRoot.querySelectorAll('input[type=\"radio\"]:checked').forEach(inp => { out[inp.name] = inp.value; });\n    return out;\n  }\n  function restoreDraft(id){\n    try{\n      const raw = localStorage.getItem(\"sq_\"+id);\n      if(!raw) return;\n      const saved = JSON.parse(raw) || {};\n      Object.entries(saved).forEach(([qid, letter]) => {\n        const sel = `#sq-quiz input[type=\"radio\"][name=\"${cssEscape(qid)}\"][value=\"${letter}\"]`;\n        const el  = document.querySelector(sel);\n        if (el) el.checked = true;\n      });\n      alert(\"sq-ok\",\"Draft restored.\");\n    }catch{}\n  }\n  function startTimer(s,onEnd){\n    let left = Number(s) || 0;\n    const tick = () => {\n      const m = String(Math.floor(left/60)).padStart(2,\"0\");\n      const ss= String(left%60).padStart(2,\"0\");\n      document.getElementById(\"sq-timer\").textContent = m+\":\"+ss;\n      if(left<=0) onEnd(); else { left--; setTimeout(tick,1000); }\n    };\n    tick();\n  }\n\n  // ========= HTTP & escaping =========\n  async function safeJsonGet(u){ try{ const r=await fetch(u); if(!r.ok) return null; return await r.json(); }catch{ return null; } }\n  async function safeJsonPost(u,b){\n    try{\n      const r=await fetch(u,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(b)});\n      if(!r.ok) return null;\n      return await r.json();\n    }catch{ return null; }\n  }\n  function escapeHtml(s){ return String(s||\"\").replace(/[&<>\"']/g,m=>({'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;',\"'\":'&#39;'}[m])); }\n  function escapeAttr(s){ return String(s||\"\").replace(/\"/g,'&quot;').replace(/'/g,'&#39;'); }\n  function cssEscape(s){ return String(s||\"\").replace(/([\"\\\\\\]\\\\])/g,\"\\\\$1\"); }\n})();\n</script>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"canonical-url":"https://henriquemartins.net/"},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../include/webex.css"],"include-after-body":["../../../include/webex.js","../login-end.html"],"toc":false,"embed-resources":false,"include-before-body":["../login-start.html"],"output-file":"p1selfquiz.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.549","html":{"css":"webex.css","include-after-body":"webex.js"},"editor":"visual","theme":"litera","title":"Self-quiz — Module 1"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}