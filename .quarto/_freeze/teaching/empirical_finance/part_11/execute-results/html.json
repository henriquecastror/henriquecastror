{
  "hash": "57ee2eeffbcaa081bd7e34f0aa7a7137",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Empirical Methods in Finance'\nsubtitle: 'Part 11'\nauthor: 'Henrique C. Martins'\nformat:\n  revealjs: \n    slide-number: true\n    theme: simple\n    chalkboard: true\n    preview-links: auto\n    logo: figs/background8.png\n    css: logo.css\n    footer: '**[**Henrique C. Martins**] [[henrique.martins@fgv.br](mailto:henrique.martins@fgv.br)][Do not use without permission]**  '\n    scrollable: true \ntitle-slide-attributes:\n    data-background-color: \"#b1cafa\"\ninclude-after: |\n  <script type=\"text/javascript\">\n    Reveal.on('ready', event => {\n      if (event.indexh === 0) {\n        document.querySelector(\"div.has-logo > img.slide-logo\").style.display = \"none\";\n      }\n    });\n    Reveal.addEventListener('slidechanged', (event) => {\n      if (event.indexh === 0) {\n        Reveal.configure({ slideNumber: null });\n        document.querySelector(\"div.has-logo > img.slide-logo\").style.display = \"none\";\n      }\n      if (event.indexh === 1) { \n        Reveal.configure({ slideNumber: 'c' });\n        document.querySelector(\"div.has-logo > img.slide-logo\").style.display = null;\n      }\n    });\n  </script>\n\n---\n\n\n\n\n\n\n\n# Introduction {.smaller background=\"#bcd3f7\"}\n\n## Introduction {.smaller background=\"#bcd3f7\"}\n\n- *Event studies* measure the impact of a specific event on stock returns.  \n- Widely used in empirical finance:  \n  - Earnings announcements  \n  - Mergers and acquisitions  \n  - SEOs/IPOs  \n  - Credit rating downgrades  \n  - Regulatory changes  \n\n\n> “Using financial market data, an event study measures the impact of a specific event on the value of a firm.” (MacKinlay, 1997)\n\n\n## Introduction {.smaller background=\"#bcd3f7\"}\n\n\n_The event study is probably the oldest and simplest causal inference research design._\n\n_It predates experiments. It predates statistics. It probably predates human language. It might predate humans._\n\n_The idea is this: at a certain time, an event occured, leading a treatment to be put into place at that time. Whatever changed from before the event to after is the effect of that treatment._\n\n[(The Effect)](https://theeffectbook.net/ch-EventStudies.html)\n\n\n\n## {.smaller background=\"#bcd3f7\"}\n\n\n![](figs/eventstudies.png)\n\n## Introduction [(The Effect)](https://theeffectbook.net/ch-EventStudies.html) {.smaller background=\"#bcd3f7\"}\n\n\n**The process for doing one of these event studies is as follows:**\n\n1) Pick an “estimation period” a fair bit before the event, and an “observation period” from just before the event to the period of interest after the event.\n\n. . .\n\n2) Use the data from the estimation period to estimate a model that can make a prediction of the stock’s return in each period. A popular way of doing this are:\n\n- Risk-adjusted returns model. Use the data from the estimation period to fit a regression describing how related the return \n is to other market portfolios, like the market return: $R=\\alpha + \\beta \\times R_m$. Then, in the observation period, use that model and the actual \n to predict in each period.\n\n## Introduction [(The Effect)](https://theeffectbook.net/ch-EventStudies.html) {.smaller background=\"#bcd3f7\"}\n\n3) In the observation period, subtract the prediction from the actual return to get the “abnormal return.” \n\n - $AR = R - \\hat{R}$\n \n. . . \n\n4) Look at $AR$ in the observation period. Nonzero values before the event imply the event was anticipated, and nonzero values after the event give the effect of the event on the stock’s return. \n\n\n \n## Introduction {.smaller background=\"#bcd3f7\"}\n\n \n![](figs/eventstudies2.png)\n\n\n\n\n\n\n\n\n\n\n# Methodology {.smaller background=\"#8eadde\"}\n\n## Steps of an Event Study {.smaller background=\"#8eadde\"}\n\nThe central idea: measure **abnormal returns (AR)**.\n\n$$AR_{it} = R_{it} - E[R_{it}|X_t]$$\n\n\n1. Define **event date** (day 0).  \n2. Select **event window** (e.g., [-1,+1], [-5,+5]).  \n3. Select **estimation window** (e.g., -120 to -20 days).  \n4. Estimate expected returns (Market Model, CAPM, Fama-French).  \n5. Compute **abnormal returns (AR)**.  \n6. Compute **cumulative abnormal returns (CAR)**.  \n7. Test statistical significance.  \n\n\n\n\n## Expected Return Models {.smaller background=\"#8eadde\"}\n\n- **Market Model**:  \n  $$R_{it} = \\alpha_i + \\beta_i R_{mt} + \\epsilon_{it}$$  \n\n- **CAPM**: includes risk-free rate.  \n- **Fama-French**: adds size (SMB), value (HML), momentum (MOM).  \n\n. . .\n\nChoice of model depends on context, data availability, and assumptions.\n\n\n\n\n\n\n\n\n\n\n## Visualizing an Event {.smaller background=\"#d2e2fc\"}\n\n\n\n\n- Day 0 = Event date  \n- Look at pre- and post-event stock returns  \n- Identify abnormal spikes relative to “normal” variation  \n\n\n\n\n\n\n\n\n## Example: Earnings Announcement {.smaller background=\"#d2e2fc\"}\n\n**Objective:** Does Apple’s quarterly earnings announcement affect its stock price?  \n\n- Event: 15 July 2023  \n- Estimation window: 120 days before event  \n- Event window: [-5,+5]  \n\n\n\n\n\n\n\n# Example in R {.smaller background=\"#abc8f5\"}\n\n---\n\n## Apple closing price (Adjusted) {.smaller background=\"#e9f7ef\"}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(quantmod)\nlibrary(tidyverse)\n\n# Data\ngetSymbols(\"AAPL\", from = \"2023-01-01\", to = \"2023-12-31\", auto.assign = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"AAPL\"\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n# Ajustado (considera splits/dividendos). Se preferir o close \"bruto\", troque Ad(AAPL) por Cl(AAPL).\naapl_xts <- Ad(AAPL)\naapl_df  <- tibble(\n  date = as.Date(index(aapl_xts)),\n  adj_close = as.numeric(aapl_xts)\n)\n\n# Plot clean em azul-escuro\nggplot(aapl_df, aes(x = date, y = adj_close)) +\n  geom_line(linewidth = 1.1, color = \"#0b3d91\") +\n  labs(title = \"Apple – Adjusted Closing Price (2023)\",\n       x = NULL, y = \"USD\") +\n  theme_minimal(base_size = 14) +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    axis.title.y = element_text(margin = margin(r = 8))\n  )\n```\n\n::: {.cell-output-display}\n![](part_11_files/figure-revealjs/unnamed-chunk-1-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## S&P 500 closing price (Adjusted) {.smaller background=\"#e9f7ef\"}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(quantmod)\nlibrary(tidyverse)\n\n# Data\ngetSymbols(\"^GSPC\", from = \"2023-01-01\", to = \"2023-12-31\", auto.assign = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"GSPC\"\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\nsp500_xts <- Ad(GSPC)\nsp500_df  <- tibble(\n  date = as.Date(index(sp500_xts)),\n  adj_close = as.numeric(sp500_xts)\n)\n\n# Plot clean em verde-escuro\nggplot(sp500_df, aes(x = date, y = adj_close)) +\n  geom_line(linewidth = 1.1, color = \"#006400\") +\n  labs(title = \"S&P 500 – Adjusted Closing Price (2023)\",\n       x = NULL, y = \"Index Points\") +\n  theme_minimal(base_size = 14) +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    axis.title.y = element_text(margin = margin(r = 8))\n  )\n```\n\n::: {.cell-output-display}\n![](part_11_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n\n\n## Apple vs S&P 500 (Normalized to 100) {.smaller background=\"#e9f7ef\"}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(quantmod)\nlibrary(tidyverse)\n\n# Data\ngetSymbols(\"AAPL\", from = \"2023-01-01\", to = \"2023-12-31\", auto.assign = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"AAPL\"\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\ngetSymbols(\"^GSPC\", from = \"2023-01-01\", to = \"2023-12-31\", auto.assign = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"GSPC\"\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n# Preços ajustados\naapl_xts  <- Ad(AAPL)\nsp500_xts <- Ad(GSPC)\n\n# Normalizar para 100 no início\naapl_norm  <- as.numeric(aapl_xts)  / as.numeric(first(aapl_xts))  * 100\nsp500_norm <- as.numeric(sp500_xts) / as.numeric(first(sp500_xts)) * 100\n\ndf <- tibble(\n  date = as.Date(index(aapl_xts)),\n  Apple = aapl_norm,\n  SP500 = sp500_norm\n) %>% pivot_longer(-date, names_to = \"Asset\", values_to = \"Index\")\n\n# Plot\nggplot(df, aes(x = date, y = Index, color = Asset)) +\n  geom_line(linewidth = 1.1) +\n  scale_color_manual(values = c(\"Apple\" = \"#0b3d91\", \"SP500\" = \"#006400\")) +\n  labs(title = \"Apple vs S&P 500 (Normalized Prices, 2023)\",\n       x = NULL, y = \"Index (start = 100)\", color = NULL) +\n  theme_minimal(base_size = 14) +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    legend.position = \"bottom\",\n    axis.title.y = element_text(margin = margin(r = 8))\n  )\n```\n\n::: {.cell-output-display}\n![](part_11_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n\n\n## Step 1 – Compute Returns and  Market Model {.smaller background=\"#e9f7ef\"}\n\nWe now move from **prices** to **daily returns**.  \nThis allows us to estimate the *Market Model* using OLS on the **estimation window**.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(quantmod)\nlibrary(tidyverse)\n\n# Compute daily returns\nret_aapl <- dailyReturn(Ad(AAPL))\nret_mkt  <- dailyReturn(Ad(GSPC))\n\n# Define event date and estimation window (120 days before)\nevent_date <- as.Date(\"2023-07-15\")\nestimation_window <- index(ret_aapl) < event_date & \n                     index(ret_aapl) >= (event_date - 180)  # ~6 months before\n\n# Estimate Market Model via OLS\nfit <- lm(ret_aapl[estimation_window] ~ ret_mkt[estimation_window])\n\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = ret_aapl[estimation_window] ~ ret_mkt[estimation_window])\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.018873 -0.005409 -0.000416  0.004732  0.033962 \n\nCoefficients:\n                            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                0.0018071  0.0007359   2.456   0.0155 *  \nret_mkt[estimation_window] 1.0980088  0.0831552  13.204   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.008142 on 122 degrees of freedom\nMultiple R-squared:  0.5883,\tAdjusted R-squared:  0.585 \nF-statistic: 174.4 on 1 and 122 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Step 2 – Compute Abnormal Returns (AR) {.smaller background=\"#e9f7ef\"}\n\nOnce we have the estimated parameters ($\\hat{\\alpha}$, $\\hat{\\beta}$),we can compute **expected returns** and the **abnormal returns**:\n\n$\\hat{R}_{i,t} = \\hat{\\alpha} + \\hat{\\beta} R_{m,t}$\n\n$AR_{i,t} = R_{i,t} - \\hat{R}_{i,t}$\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Predicted returns from the Market Model\npred <- predict(fit, newdata = data.frame(ret_mkt = ret_mkt))\n\n# Abnormal returns\nar <- ret_aapl - pred\n\nhead(ar, 10)   # first 10 abnormal returns\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           daily.returns\n2023-01-03  0.0004223688\n2023-01-04  0.0255949386\n2023-01-05 -0.0040247814\n2023-01-06  0.0142143417\n2023-01-09 -0.0107640774\n2023-01-10  0.0034305933\n2023-01-11  0.0195048773\n2023-01-12 -0.0144933794\n2023-01-13  0.0055727897\n2023-01-17  0.0211888536\n```\n\n\n:::\n:::\n\n\nAR > 0: Apple outperformed the market on that day\n\nAR < 0: Apple underperformed the market on that day\n\n\n\n\n\n\n\n\n## Step 3 – Compute CAR {.smaller background=\"#e9f7ef\"}\n\nTo capture the **aggregate effect** of the event, we sum abnormal returns over the event window:\n\n$CAR_{i}(t_1,t_2) = \\sum_{t=t_1}^{t_2} AR_{i,t}$\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Define event window: 5 days before and after\nwindow <- (index(ret_aapl) >= (event_date - 5)) &\n          (index(ret_aapl) <= (event_date + 5))\n\n# Cumulative abnormal returns\ncar <- cumsum(ar[window])\n\ncar\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           daily.returns\n2023-07-10  -0.025708796\n2023-07-11  -0.029544737\n2023-07-12  -0.022166677\n2023-07-13  -0.032003133\n2023-07-14  -0.035762294\n2023-07-17  -0.006024236\n2023-07-18  -0.025249174\n2023-07-19  -0.031461287\n2023-07-20  -0.059505828\n```\n\n\n:::\n:::\n\n\nA positive CAR suggests good news (value creation).\n\nA negative CAR suggests bad news (value destruction).\n\n\n\n\n\n\n\n## Step 4 – Visualize CAR {.smaller background=\"#e9f7ef\"}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Extract abnormal returns only for the event window\nar_window <- ar[window]\n\n# Recalculate CAR starting at 0\ncar <- cumsum(as.numeric(ar_window))\n\n# Plot corrected CAR\nplot(index(ar_window), car, type = \"l\", col = \"#0b3d91\", lwd = 2,\n     main = \"Cumulative Abnormal Returns (CAR) – Event Window\",\n     xlab = \"Date\", ylab = \"CAR\")\nabline(v = event_date, col = \"red\", lwd = 2, lty = 2)\n```\n\n::: {.cell-output-display}\n![](part_11_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## {.smaller background=\"#e9f7ef\"}\n\nWhat is the CAR in this window?\n\n- **Estimation window**: 120 trading days before the event (used to estimate the market model).  \n- **Event window**: [-5, +5] days around the event date (used to measure the abnormal impact).  \n- The **CAR (Cumulative Abnormal Return)** is the sum of abnormal returns across this event window.  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nar_window <- ar[window]                  # abnormal returns in the event window [-5,+5]\ncar <- cumsum(as.numeric(ar_window))     # cumulative abnormal returns, starting at 0\nCAR_total <- last(car)                   # CAR over the full event window\nCAR_total\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.05950583\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Robustness table {.smaller background=\"#e9f7ef\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\nTable: CAR robustness across estimation and event windows\n\n| est_window_days|event_window | n_est| n_event| alpha_hat| beta_hat|     CAR| t_CAR|\n|---------------:|:------------|-----:|-------:|---------:|--------:|-------:|-----:|\n|              60|[-10,+10]    |    41|      15|   0.00073|    0.862| -0.0260| -0.95|\n|              60|[-3,+3]      |    41|       5|   0.00073|    0.862|  0.0039|  0.22|\n|              60|[-5,+5]      |    41|       9|   0.00073|    0.862| -0.0198| -0.81|\n|             120|[-10,+10]    |    82|      15|   0.00077|    1.102| -0.0327| -1.14|\n|             120|[-3,+3]      |    82|       5|   0.00077|    1.102| -0.0025| -0.13|\n|             120|[-5,+5]      |    82|       9|   0.00077|    1.102| -0.0276| -1.10|\n|             180|[-10,+10]    |   124|      15|   0.00181|    1.098| -0.0481| -1.68|\n|             180|[-3,+3]      |   124|       5|   0.00181|    1.098| -0.0076| -0.40|\n|             180|[-5,+5]      |   124|       9|   0.00181|    1.098| -0.0367| -1.47|\n\n\n:::\n:::\n\n\n\n\n# Extensions  {.smaller background=\"#e9f7ef\"}\n\n\n## Extensions and Practical Challenges {.smaller background=\"#e9f7ef\"}\n\n- **Multiple events**  \n  - Often researchers examine a *wave* of events (e.g., several M&As in one industry, multiple SEOs).  \n  - Challenge: heterogeneity across firms and event timing. Aggregation must be justified.  \n\n## Extensions and Practical Challenges {.smaller background=\"#e9f7ef\"}\n\n- **Clustering of events**  \n  - Many events occur on the same date (e.g., quarterly earnings announcements).  \n  - Standard errors may be underestimated if cross-sectional dependence is ignored.  \n  - Solutions: event-time portfolios, clustered or robust standard errors.  \n\n## Extensions and Practical Challenges {.smaller background=\"#e9f7ef\"}\n\n- **Confounding events**  \n  - Other major news may coincide with the focal event (e.g., macro policy change).  \n  - Makes it difficult to attribute abnormal returns exclusively to the event of interest.  \n\n## Extensions and Practical Challenges {.smaller background=\"#e9f7ef\"}\n\n- **Long-horizon event studies**  \n  - Extending the event window to months/years raises econometric issues.  \n  - CARs accumulate model error and are sensitive to the choice of expected-return model.  \n  - Interpretation becomes less about short-term information effects, more about long-run performance.  \n\n\n\n\n\n\n# Final Comments {.smaller background=\"#95a9c7\"}\n\n## Final Comments {.smaller background=\"#95a9c7\"}\n\n- Event studies are powerful and widely used.  \n- Results depend heavily on:  \n  - Correct identification of the event  \n  - Appropriate choice of estimation model  \n  - Robustness checks  \n\n. . .\n\n**Easy to run, hard to interpret.**\n\n\n\n\n\n## 🙋‍♂️ **Any Questions?**{ .smaller  background=\"#fdf6e3\"}\n\n::: columns\n::: {.column width=\"50%\"}\n### Thank You!\n\n![](figs/qa2.png){width=\"110%\" style=\"box-shadow: none;\"}\n\n:::\n\n::: {.column width=\"50%\"}\n<div style=\"text-align:right;\">\n  <img src=\"figs/avatar.jpg\" width=\"120px\" style=\"border-radius:50%; box-shadow:0 4px 12px rgba(0,0,0,.25);\" />\n</div>\n\n### **Henrique C. Martins**\n\n- 🌐 [FGV/EAESP](https://eaesp.fgv.br/en/people/henrique-castro-martins)  \n- 💼 [LinkedIn](https://www.linkedin.com/in/henriquecastror/)  \n- 🧠 [Google Scholar](https://scholar.google.com.br/citations?user=7gIfkRMAAAAJ&hl=pt-BR&oi=ao)  \n- 📄 [Lattes CV](http://lattes.cnpq.br/6076997472159785)  \n- 🏠 [Personal Website](https://henriquemartins.net/)  \n:::\n:::\n\n\n",
    "supporting": [
      "part_11_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}