{
  "hash": "eb73d13269237581e33253300ed4cecf",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Empirical Methods in Finance'\nsubtitle: 'Practicing 4'\nauthor: 'Henrique C. Martins'\nformat:\n  revealjs: \n    slide-number: true\n    theme: simple\n    chalkboard: true\n    preview-links: auto\n    logo: figs/background8.png\n    css: logo.css\n    footer: '**[**Henrique C. Martins**] [[henrique.martins@fgv.br](mailto:henrique.martins@fgv.br)][Do not use without permission]**  '\n    multiplex: true\n    scrollable: true \ntitle-slide-attributes:\n    data-background-color: \"#b1cafa\"\ninclude-after: |\n  <script type=\"text/javascript\">\n    Reveal.on('ready', event => {\n      if (event.indexh === 0) {\n        document.querySelector(\"div.has-logo > img.slide-logo\").style.display = \"none\";\n      }\n    });\n    Reveal.addEventListener('slidechanged', (event) => {\n      if (event.indexh === 0) {\n        Reveal.configure({ slideNumber: null });\n        document.querySelector(\"div.has-logo > img.slide-logo\").style.display = \"none\";\n      }\n      if (event.indexh === 1) { \n        Reveal.configure({ slideNumber: 'c' });\n        document.querySelector(\"div.has-logo > img.slide-logo\").style.display = null;\n      }\n    });\n  </script>\n\n---\n\n\n\n\n\n\n\n\n# Selection problem {.smaller}\n\n##  {.smaller}\n\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\npop <- 5000\nsample <- 50\nset.seed(1235)\nx <- runif(pop, min=0, max=5000)\ny <- x/5 + runif(pop, min=0, max=5000)\ndf <- data.frame(x,y)\n```\n:::\n\n\nImagine that the population contains  **5000** units, from which you can observe only **50**. \n\nYou want to run a linear model to understand the relationship between x and Y. \n\n\n\n\n\n\n\n\n##  {.smaller}\n\nThe \"true\" beta of this relationship is as follows. By \"true\" I mean the beta you would get should you observe the population (remember though that you don't).\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nsummary(lm(df$y ~ df$x))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = df$y ~ df$x)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2527.44 -1230.21     4.28  1246.20  2510.94 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 2.549e+03  4.103e+01   62.13   <2e-16 ***\ndf$x        1.871e-01  1.407e-02   13.30   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1435 on 4998 degrees of freedom\nMultiple R-squared:  0.03416,\tAdjusted R-squared:  0.03397 \nF-statistic: 176.8 on 1 and 4998 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\nSo the \"true\" beta is 0.187. And the t-stat is 13.296 \n\n\n\n\n##  {.smaller}\n\nPlotting this relationship in a graph, you get:\n\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nlibrary(ggplot2)\nlibrary(ggthemes)\nggplot(df) +  geom_point( aes(x=x, y=y), color = \"lightblue\") +\n              geom_smooth(data = df, aes(x=x, y=y) , method = lm) + \n              theme_solarized() + \n              labs(title = paste(\"Beta is\" , round(summary(lm(df$y ~ df$x))$coefficients[2,1], 3) , \n                                 \", Beta t-stat is\" , round(summary(lm(df$y ~ df$x))$coefficients[2,3], 3) , \n                                 \", R2 is\" , round(summary(lm(df$y ~ df$x))$r.squared , 3) ,\n                                 \", Sample Size is\" , nrow(df)    ) ) \n```\n\n::: {.cell-output-display}\n![](part_O4_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n\n\n##  {.smaller}\n\nIf you run a linear model using the sample you can observe, you might get this.\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nlibrary(dplyr)\nset.seed(1235)\nrandom <- sample_n(df, sample)\nreg <- lm(random$y ~ random$x)\nsum <- summary(reg)\nggplot(df) +  geom_point( aes(x=x, y=y), color = \"grey\") +\n              geom_point( data = random, aes(x=x, y=y) , color = \"blue\") +\n              geom_smooth(data = random, aes(x=x, y=y) , method = lm) + \n              theme_solarized() + \n              labs(title = paste(\"Beta is\" , round(reg$coefficients[\"random$x\"], 3) , \n                                 \", Beta t-stat is\" , round(summary(reg)$coefficients[2 , 3]   , 3) , \n                                 \", R2 is\" , round(summary(reg)$r.squared , 3) ,\n                                 \", Sample Size is\" , nrow(random)    ) ) \n```\n\n::: {.cell-output-display}\n![](part_O4_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n##  {.smaller}\n\nOr maybe this:\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nset.seed(1242)\nrandom <- sample_n(df, sample)\nreg <- lm(random$y ~ random$x)\nsum <- summary(reg)\nggplot(df) +  geom_point( aes(x=x, y=y), color = \"grey\") +\n              geom_point( data = random, aes(x=x, y=y) , color = \"blue\") +\n              geom_smooth(data = random, aes(x=x, y=y) , method = lm) + \n              theme_solarized() + \n              labs(title = paste(\"Beta is\" , round(reg$coefficients[\"random$x\"], 3) , \n                                 \", Beta t-stat is\" , round(summary(reg)$coefficients[2 , 3]   , 3) , \n                                 \", R2 is\" , round(summary(reg)$r.squared , 3) ,\n                                 \", Sample Size is\" , nrow(random)    ) ) \n```\n\n::: {.cell-output-display}\n![](part_O4_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n##  {.smaller}\n\n\nOr maybe this:\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nset.seed(1243)\nrandom <- sample_n(df, sample)\nreg <- lm(random$y ~ random$x)\nsum <- summary(reg)\nggplot(df) +  geom_point( aes(x=x, y=y), color = \"grey\") +\n              geom_point( data = random, aes(x=x, y=y) , color = \"blue\") +\n              geom_smooth(data = random, aes(x=x, y=y) , method = lm) + \n              theme_solarized() + \n              labs(title = paste(\"Beta is\" , round(reg$coefficients[\"random$x\"], 3) , \n                                 \", Beta t-stat is\" , round(summary(reg)$coefficients[2 , 3]   , 3) , \n                                 \", R2 is\" , round(summary(reg)$r.squared , 3) ,\n                                 \", Sample Size is\" , nrow(random)    ) ) \n```\n\n::: {.cell-output-display}\n![](part_O4_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n##  {.smaller}\n\nOr maybe several other estimates.\n\n**So, the takeaway is: always remember that you can only observe a sample of the population. If the sample you observe is biased, you will get biased estimates.**\n\n\n\n\n\n\n\n\n\n## **THANK YOU!** {background=\"#b1cafa\"}\n\n::: columns\n::: {.column width=\"60%\"}\n**QUESTIONS?**\n\n![](figs/qa2.png){width=\"150%\" heigth=\"150%\"}\n:::\n\n::: {.column width=\"40%\"}\n**Henrique C. Martins**\n\n-   [FGV/EAESP](https://eaesp.fgv.br/en/people/henrique-castro-martins)\n-   [Personal Website](https://henriquemartins.net/)\n-   [LinkedIn](https://www.linkedin.com/in/henriquecastror/)\n-   [Lattes](http://lattes.cnpq.br/6076997472159785)\n-   [Scholar](https://scholar.google.com.br/citations?user=7gIfkRMAAAAJ&hl=pt-BR&oi=ao)\\\n:::\n:::\n\n::: footer\n:::\n",
    "supporting": [
      "part_O4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}