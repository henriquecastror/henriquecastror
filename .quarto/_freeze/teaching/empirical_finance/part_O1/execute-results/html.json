{
  "hash": "d10bf3a54c158ad8a6ae57eccf7785f0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Empirical Methods in Finance'\nsubtitle: 'Practicing 1'\nauthor: 'Henrique C. Martins'\nformat:\n  revealjs: \n    slide-number: true\n    theme: simple\n    chalkboard: true\n    preview-links: auto\n    logo: figs/background8.png\n    css: logo.css\n    footer: '**[**Henrique C. Martins**] [[henrique.martins@fgv.br](mailto:henrique.martins@fgv.br)][Do not use without permission]**  '\n    multiplex: true\n    scrollable: true \ntitle-slide-attributes:\n    data-background-color: \"#b1cafa\"\ninclude-after: |\n  <script type=\"text/javascript\">\n    Reveal.on('ready', event => {\n      if (event.indexh === 0) {\n        document.querySelector(\"div.has-logo > img.slide-logo\").style.display = \"none\";\n      }\n    });\n    Reveal.addEventListener('slidechanged', (event) => {\n      if (event.indexh === 0) {\n        Reveal.configure({ slideNumber: null });\n        document.querySelector(\"div.has-logo > img.slide-logo\").style.display = \"none\";\n      }\n      if (event.indexh === 1) { \n        Reveal.configure({ slideNumber: 'c' });\n        document.querySelector(\"div.has-logo > img.slide-logo\").style.display = null;\n      }\n    });\n  </script>\n\n---\n\n\n\n\n\n\n\n\n\n\n\n# Basic Statistics {.smaller}\n\n## Basic stats {.smaller }\n\nThe following are simple examples of how to compute basic statistics using R. We will start importing the data. Let's use the free dataset `iris`, available in R.\n\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\niris <- iris \n```\n:::\n\n\n\nFirst, explore the dataset.\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nstr(iris) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n```\n\n\n:::\n:::\n\n\n\n- We have 5 variables: Sepal.Length, Sepal.Width, Petal.Length, Petal.Width e Species. The first four are numeric while the last is a string with three groups: setosa, versicolor, and virginica. The dataset contains 150 observations\n\n\n\n\n\n\n\n## Basic stats {.smaller }\n\nLet's take a look at the first 10 observations in the dataset.\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nhead(iris, 10) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1           5.1         3.5          1.4         0.2  setosa\n2           4.9         3.0          1.4         0.2  setosa\n3           4.7         3.2          1.3         0.2  setosa\n4           4.6         3.1          1.5         0.2  setosa\n5           5.0         3.6          1.4         0.2  setosa\n6           5.4         3.9          1.7         0.4  setosa\n7           4.6         3.4          1.4         0.3  setosa\n8           5.0         3.4          1.5         0.2  setosa\n9           4.4         2.9          1.4         0.2  setosa\n10          4.9         3.1          1.5         0.1  setosa\n```\n\n\n:::\n:::\n\n\n\n## Basic stats {.smaller }\n\n\nNow, let's take a look at the first 5 observations of each species.\n\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nby(iris,iris[\"Species\"],head,n=5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpecies: setosa\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n------------------------------------------------------------ \nSpecies: versicolor\n   Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n51          7.0         3.2          4.7         1.4 versicolor\n52          6.4         3.2          4.5         1.5 versicolor\n53          6.9         3.1          4.9         1.5 versicolor\n54          5.5         2.3          4.0         1.3 versicolor\n55          6.5         2.8          4.6         1.5 versicolor\n------------------------------------------------------------ \nSpecies: virginica\n    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n101          6.3         3.3          6.0         2.5 virginica\n102          5.8         2.7          5.1         1.9 virginica\n103          7.1         3.0          5.9         2.1 virginica\n104          6.3         2.9          5.6         1.8 virginica\n105          6.5         3.0          5.8         2.2 virginica\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n## Mean and Median {.smaller }\n\nNow, let's find the means and the medians of the four numeric variables. The most intuitive way is as follows.\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nmean(iris$Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.843333\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nmean(iris$Sepal.Width)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.057333\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nmean(iris$Petal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.758\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nmean(iris$Petal.Width)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.199333\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nmedian(iris$Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.8\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nmedian(iris$Sepal.Width)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nmedian(iris$Petal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.35\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nmedian(iris$Petal.Width)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.3\n```\n\n\n:::\n:::\n\n\n\n\n## Mean and Median {.smaller }\n\nBut this is the easiest way.\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nsummary(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n```\n\n\n:::\n:::\n\n\n\n\n## Mean and Median {.smaller }\n\nSee that in the code above you also have the number of observations of each species. If you wanted to know how many observations you have in the dataset, you could use the following line. This might be important in the future.\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nlength(iris$Species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 150\n```\n\n\n:::\n:::\n\n\n\n## Mean and Median {.smaller }\n\nIf you want the same thing by group, do as follows:\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nby(iris, iris$Species, summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\niris$Species: setosa\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.300   Min.   :1.000   Min.   :0.100  \n 1st Qu.:4.800   1st Qu.:3.200   1st Qu.:1.400   1st Qu.:0.200  \n Median :5.000   Median :3.400   Median :1.500   Median :0.200  \n Mean   :5.006   Mean   :3.428   Mean   :1.462   Mean   :0.246  \n 3rd Qu.:5.200   3rd Qu.:3.675   3rd Qu.:1.575   3rd Qu.:0.300  \n Max.   :5.800   Max.   :4.400   Max.   :1.900   Max.   :0.600  \n       Species  \n setosa    :50  \n versicolor: 0  \n virginica : 0  \n                \n                \n                \n------------------------------------------------------------ \niris$Species: versicolor\n  Sepal.Length    Sepal.Width     Petal.Length   Petal.Width          Species  \n Min.   :4.900   Min.   :2.000   Min.   :3.00   Min.   :1.000   setosa    : 0  \n 1st Qu.:5.600   1st Qu.:2.525   1st Qu.:4.00   1st Qu.:1.200   versicolor:50  \n Median :5.900   Median :2.800   Median :4.35   Median :1.300   virginica : 0  \n Mean   :5.936   Mean   :2.770   Mean   :4.26   Mean   :1.326                  \n 3rd Qu.:6.300   3rd Qu.:3.000   3rd Qu.:4.60   3rd Qu.:1.500                  \n Max.   :7.000   Max.   :3.400   Max.   :5.10   Max.   :1.800                  \n------------------------------------------------------------ \niris$Species: virginica\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.900   Min.   :2.200   Min.   :4.500   Min.   :1.400  \n 1st Qu.:6.225   1st Qu.:2.800   1st Qu.:5.100   1st Qu.:1.800  \n Median :6.500   Median :3.000   Median :5.550   Median :2.000  \n Mean   :6.588   Mean   :2.974   Mean   :5.552   Mean   :2.026  \n 3rd Qu.:6.900   3rd Qu.:3.175   3rd Qu.:5.875   3rd Qu.:2.300  \n Max.   :7.900   Max.   :3.800   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    : 0  \n versicolor: 0  \n virginica :50  \n                \n                \n                \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n## Minimum and maximum  {.smaller }\n\nThe function `summary`already gives you the minimum and maximum of all variables. But sometimes you need to find only these values. You could use the following lines.\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nmin(iris$Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.3\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nmax(iris$Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7.9\n```\n\n\n:::\n:::\n\n      \nYou could also find the range of values to find the extreme values of a variable.\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nrange(iris$Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.3 7.9\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Minimum and maximum  {.smaller }\n\nIf you need the distance between the extreme values, you can use:\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"R\" code-line-numbers=\"true\"}\nmax(iris$Sepal.Length) - min(iris$Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.6\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Standard-deviation and Variance {.smaller }\n\nFinally, you can also compute the Standard-deviation and Variance of one variable as follows.\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nsd(iris$Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8280661\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nvar(iris$Sepal.Length) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6856935\n```\n\n\n:::\n:::\n\n\nIf you want the standard deviation of all variables:\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nlapply(iris[, 1:4], sd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$Sepal.Length\n[1] 0.8280661\n\n$Sepal.Width\n[1] 0.4358663\n\n$Petal.Length\n[1] 1.765298\n\n$Petal.Width\n[1] 0.7622377\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n \n## Correlation {.smaller }\n\nThe following lines will show you a correlation table. First, you need to create a new dataframe with only the numeric variables. This is an extremely important table to your academic paper.\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nlibrary(dplyr)\niris_num <- select(iris,-Species)\ncor(iris_num)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             Sepal.Length Sepal.Width Petal.Length Petal.Width\nSepal.Length    1.0000000  -0.1175698    0.8717538   0.8179411\nSepal.Width    -0.1175698   1.0000000   -0.4284401  -0.3661259\nPetal.Length    0.8717538  -0.4284401    1.0000000   0.9628654\nPetal.Width     0.8179411  -0.3661259    0.9628654   1.0000000\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n## Frequence table {.smaller }\n\nHere is another important table you might use in your paper: the frequency of observations by group.\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\ntable(iris$Species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    setosa versicolor  virginica \n        50         50         50 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n# T-test {.smaller }\n\n## T-test {.smaller }\n\nLet's create now a t-test of the difference in means. For that, we will use another dataset: `mtcars`. The data was extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles. You can find the description of the variables [here](https://www.rdocumentation.org/packages/datasets/versions/3.6.2/topics/mtcars).\n\nYou will find that there is one variable that is binary: either the cars are automatic (1) or are manual (0).\n\nWhen you have binary variables, it is always a good idea to test if the means of the variables are different between the two groups of the binary variable.\n\nThis is a big thing and you will use a lot in your academic research. In fact, in many articles, the authors explore and compare two groups. So, be ready to create such an analysis.  \n\n\n\n\n\n\n\n## T-test {.smaller }\n\nFirst, import the new dataset. Then, repeat the first steps and inspect this dataset (I will not inspect the dataset here, but you should inspect as a way to practice it). \n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nmtcars <- mtcars\n```\n:::\n\n\n\n\n## T-test {.smaller }\n\nThen, use the binary variable to check if the other variables have similar means. In the following case, I am comparing the average of `mpg` (miles per gas) of an automatic with a manual car.\n\n\n\n::: {.cell layout-align=\"center\" output-location='default'}\n\n```{.r .cell-code  code-fold=\"false\" code-summary=\"R\" code-line-numbers=\"true\"}\nt.test(mpg ~ am, data=mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  mpg by am\nt = -3.7671, df = 18.332, p-value = 0.001374\nalternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0\n95 percent confidence interval:\n -11.280194  -3.209684\nsample estimates:\nmean in group 0 mean in group 1 \n       17.14737        24.39231 \n```\n\n\n:::\n:::\n\n\n- We see that the average in the automatic car is around 17.1 while the average of manual cars is 24.3.\n\n- These averages are statistically different, since the t-stat is high (-3.76) and p-value is low (0.001).\n\n- So, we can learn that automatic cars consume more gas than manual cars.\n\n- This type of test will be too important in your article.\n\n\n\n\n\n## 🙋‍♂️ **Any Questions?**{ .smaller  background=\"#fdf6e3\"}\n\n::: columns\n::: {.column width=\"50%\"}\n### Thank You!\n\n![](figs/qa2.png){width=\"110%\" style=\"box-shadow: none;\"}\n\n:::\n\n::: {.column width=\"50%\"}\n<div style=\"text-align:right;\">\n  <img src=\"figs/avatar.jpg\" width=\"120px\" style=\"border-radius:50%; box-shadow:0 4px 12px rgba(0,0,0,.25);\" />\n</div>\n\n### **Henrique C. Martins**\n\n- 🌐 [FGV/EAESP](https://eaesp.fgv.br/en/people/henrique-castro-martins)  \n- 💼 [LinkedIn](https://www.linkedin.com/in/henriquecastror/)  \n- 🧠 [Google Scholar](https://scholar.google.com.br/citations?user=7gIfkRMAAAAJ&hl=pt-BR&oi=ao)  \n- 📄 [Lattes CV](http://lattes.cnpq.br/6076997472159785)  \n- 🏠 [Personal Website](https://henriquemartins.net/)  \n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}