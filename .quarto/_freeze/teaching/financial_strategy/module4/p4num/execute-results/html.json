{
  "hash": "0aef72d350e2aa33a4f20a17a186fc8d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Module 4:  Numeric Questions\"\n---\n\n\n\n::: {.callout-warning}\n### For students\n\n\n**Last updated:** 06/08/2025 10:43\n\n\nThe questions are based on or inspired by the following references:\n\n- [**Berk & DeMarzo, Corporate Finance, 5th ed. (2020)**](https://www.amazon.com.br/Corporate-Finance-Global-Jonathan-Berk/dp/1292304154)  \n- [**Brealey & Myers, Principles of Corporate Finance, 13th ed. (2020)**](https://www.amazon.com.br/Principles-Corporate-Finance-Richard-Brealey/dp/1260565556/ref=sr_1_3?refinements=p_27%3ABrealey+Myers&s=books&sr=1-3)\n\n---\n\nüí° *You can also press `Ctrl + P` (or `Cmd + P` on Mac) to print or save your responses as a `.pdf` file.*\n\n\n\n---\n\n‚ö†Ô∏è _These exercises are **powered by AI-assisted technologies** and **may contain occasional formatting or logic errors**. Please report any issues you encounter so I can improve the experience._\n\n\n::: \n\n\n___\n\n\n### üìò Part 1 (until Midterm)\n\n| Chapter | Slides | T/F | MCQ | Numeric | Long |\n|--------:|:------:|:---:|:---:|:-------:|:----:|\n| ch12    | [üéûÔ∏è](p4.html) | [‚úÖ](p4tf.html) | [‚ùì](p4mcq.html) | [üî¢](p4num.html) | [üìù](p4long.html) |\n\n\n___\n\n**Answer the following questions based on the discussions in class.**\n\n<script>\n  const SLIDE_ID = \"module4_p4num\";\n</script>\n\n<style>\n  #login-form {\n    max-width: 300px;\n    margin: 100px auto 40px auto;\n    padding: 20px;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n    font-family: sans-serif;\n    box-shadow: 0 0 10px rgba(0,0,0,0.1);\n  }\n\n  #login-form input {\n    width: 100%;\n    padding: 10px;\n    margin: 6px 0;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n  }\n\n  #login-form button {\n    width: 100%;\n    padding: 10px;\n    margin-top: 10px;\n    background-color: #0066cc;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  #login-error {\n    color: red;\n    text-align: center;\n    margin-top: 10px;\n  }\n\n  /* NOVO: protege todo o conte√∫do da p√°gina */\n  body.locked #after-login-content {\n    display: none !important;\n  }\n</style>\n\n<!-- Adiciona a classe 'locked' assim que a p√°gina carrega -->\n<script>\n  document.documentElement.classList.add(\"locked\");\n</script>\n\n<!-- Formul√°rio de login -->\n<form id=\"login-form\" onsubmit=\"event.preventDefault(); validateLogin();\">\n  <h3 style=\"text-align: center;\">Login</h3>\n  <input type=\"text\" id=\"username\" placeholder=\"Username\" required />\n  <input type=\"password\" id=\"password\" placeholder=\"Password\" required />\n  <button type=\"submit\">Enter</button>\n  <div id=\"loading-msg\" style=\"display:none; text-align:center; margin-top:10px; color:gray;\"></div>\n  <div id=\"login-error\" style=\"color:red; text-align:center; margin-top:10px;\"></div>\n</form>\n\n<!-- CONTE√öDO PROTEGIDO COME√áA AQUI -->\n<div id=\"after-login-content\" style=\"display: none;\">\n  <h4 id=\"welcome-message\" style=\"text-align: center; display: none; margin-top: 10px; font-size: 1.8em; color: #333;\"></h4>\n\n<script>\n  async function validateLogin() {\n    const username = document.getElementById(\"username\").value.trim();\n    const password = document.getElementById(\"password\").value.trim();\n    const errorBox = document.getElementById(\"login-error\");\n    const loadingBox = document.getElementById(\"loading-msg\");\n    const welcomeMsg = document.getElementById(\"welcome-message\");\n\n    errorBox.textContent = \"\";\n    loadingBox.textContent = \"Authenticating your credentials. This may take a few seconds...\";\n    loadingBox.style.display = \"block\";\n\n    // üö® Aqui voc√™ obt√©m a URL da p√°gina\n    const currentPage = window.location.pathname;\n\n    const response = await fetch(`https://script.google.com/macros/s/AKfycbxb3Z73DvsgGiGwK-jVp89jA5EGEYk24nbPNblQiNxFZPYvvDTvO-v4S4N_L-4YZ8KZfQ/exec?username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}&page=${encodeURIComponent(currentPage)}`);\n    const text = await response.text();\n\n    loadingBox.style.display = \"none\";\n\n    if (text === \"OK\") {\n      welcomeMsg.textContent = `Welcome, ${username}!`;\n      welcomeMsg.style.display = \"block\";\n      document.getElementById(\"login-form\").style.display = \"none\";\n      document.getElementById(\"after-login-content\").style.display = \"block\";\n      document.documentElement.classList.remove(\"locked\");\n    } else if (text === \"FAIL\") {\n      errorBox.textContent = \"Invalid username or password.\";\n    } else {\n      errorBox.textContent = \"Missing credentials.\";\n    }\n  }\n</script>\n\n\n\n::: {.webex-box}\n\n## Cost of Equity Capital\n\n\n\n::: {.question-block}\n\n<form onsubmit=\"event.preventDefault(); checkNumericAnswer('module4_num_q1a')\" style=\"display: flex; flex-direction: row; gap: 6px;\">\n  <label for=\"module4_num_q1a\"><strong>Suppose a security's beta is 0.99. If the risk-free rate is 5.01% and the market risk premium is 7.98%, what is the security's cost of equity capital?</strong></label>\n  <input type=\"number\" id=\"module4_num_q1a\" name=\"module4_num_q1a\" placeholder=\"Enter value\" style=\"width: 150px;\"\n         data-correct-answer=12.91 data-tolerance=\"0.01\" />\n</form>\n\n<div id=\"feedback-module4_num_q1a\" class=\"feedback\" data-status=\"\" style=\"display:none;\">\n‚úÖ Cost of Equity = r_f + Œ≤ √ó MRP = **12.91**%.\n</div>\n\n:::\n\n\n\n\n::: \n\n::: {.webex-box}\n\n## Cost of Debt (CAPM vs Default Method)\n\n\n\n::: {.question-block}\n\n<form onsubmit=\"event.preventDefault(); checkNumericAnswer('module4_num_q2a')\" style=\"display: flex; flex-direction: row; gap: 6px;\">\n  <label for=\"module4_num_q2a\"><strong>1. Estimate the debt's expected return using CAPM. Yield = 10%, Beta = 0.15, Risk-free rate = 6.51%, Market Risk Premium = 7.99%.</strong></label>\n  <input type=\"number\" id=\"module4_num_q2a\" name=\"module4_num_q2a\" placeholder=\"Enter value\" style=\"width: 150px;\"\n         data-correct-answer=7.71 data-tolerance=\"0.01\" />\n</form>\n\n<div id=\"feedback-module4_num_q2a\" class=\"feedback\" data-status=\"\" style=\"display:none;\">\n‚úÖ Expected Return (CAPM) = r_f + Œ≤ √ó MRP = **7.71**%.\n</div>\n\n:::\n\n::: {.question-block}\n\n<form onsubmit=\"event.preventDefault(); checkNumericAnswer('module4_num_q2b')\" style=\"display: flex; flex-direction: row; gap: 6px;\">\n  <label for=\"module4_num_q2b\"><strong>2. Estimate the debt's expected return using Default Rate method (Default Prob = 50%, Loss Rate = 7%).</strong></label>\n  <input type=\"number\" id=\"module4_num_q2b\" name=\"module4_num_q2b\" placeholder=\"Enter value\" style=\"width: 150px;\"\n         data-correct-answer=6.5 data-tolerance=\"0.01\" />\n</form>\n\n<div id=\"feedback-module4_num_q2b\" class=\"feedback\" data-status=\"\" style=\"display:none;\">\n‚úÖ Expected Return (Default Method) = Yield - Default √ó Loss = **6.5**%.\n</div>\n\n:::\n\n\n\n::: \n\n\n::: {.webex-box}\n\n## Cost of Equity Capital\n\n\n\n\n::: {.question-block}\n\n<form onsubmit=\"event.preventDefault(); checkNumericAnswer('module4_num_q1b')\" style=\"display: flex; flex-direction: row; gap: 6px;\">\n  <label for=\"module4_num_q1b\"><strong>Suppose a security's beta is 0.71. If the risk-free rate is 4.98% and the expected market return is 12.99%, what is the security's cost of equity capital?</strong></label>\n  <input type=\"number\" id=\"module4_num_q1b\" name=\"module4_num_q1b\" placeholder=\"Enter value\" style=\"width: 150px;\"\n         data-correct-answer=10.634 data-tolerance=\"0.01\" />\n</form>\n\n<div id=\"feedback-module4_num_q1b\" class=\"feedback\" data-status=\"\" style=\"display:none;\">\n‚úÖ Cost of Equity = r_f + Œ≤ √ó (E[R_M] - r_f) = **10.63**%.\n</div>\n\n:::\n\n\n\n::: \n\n\n\n\n<div style=\"text-align: right;\">\n<script>\n// Fun√ß√£o auxiliar para verificar e definir o status de uma quest√£o.\nfunction checkAnswerAndSetStatus(questionId, userAnswer, correctAnswer, feedbackDivId, tolerance = 0) {\n  const feedbackDiv = document.getElementById(feedbackDivId);\n  if (!feedbackDiv) return;\n\n  let isCorrect = false;\n\n  // Trata respostas num√©ricas com toler√¢ncia\n if (typeof correctAnswer === 'number' && typeof userAnswer === 'number' && !isNaN(userAnswer)) {\n    const lowerBound = correctAnswer - tolerance;\n    const upperBound = correctAnswer + tolerance;\n    isCorrect = (userAnswer >= lowerBound && userAnswer <= upperBound);\n  } else if (typeof userAnswer === 'string') {\n    // Para respostas de texto (T/F, M√∫ltipla Escolha)\n    isCorrect = (userAnswer.trim().toUpperCase() === correctAnswer.toUpperCase());\n  }\n  // Adicione outras l√≥gicas de compara√ß√£o aqui se necess√°rio (ex: arrays para m√∫ltiplos checkboxes)\n\n  if (isCorrect) {\n    feedbackDiv.dataset.status = \"correct\";\n  } else {\n    feedbackDiv.dataset.status = \"incorrect\";\n  }\n  feedbackDiv.style.display = \"none\"; // Mant√©m o feedback oculto\n}\n\n// Fun√ß√£o para obter a resposta de um grupo de radio buttons\nfunction getSelectedRadioValue(name) {\n    const radios = document.querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]:checked`);\n    if (radios.length > 0) {\n        return radios[0].value;\n    }\n    return ''; // Retorna string vazia se nada for selecionado\n}\n\nfunction toggleFeedback() {\n  const questionBlocks = document.querySelectorAll('.question-block');\n  const feedbacks = document.querySelectorAll('.feedback');\n  const scoreDiv = document.getElementById('score-summary');\n  const toggleButton = document.getElementById('toggle-feedback-btn');\n\n  let showing = feedbacks.length > 0 && feedbacks[0].style.display === 'block';\n\n  if (showing) {\n    // Esconder feedback\n    feedbacks.forEach(f => {\n      f.style.display = 'none';\n      f.style.color = 'black'; // Reseta a cor ao esconder\n    });\n    scoreDiv.textContent = '';\n    toggleButton.textContent = 'Show Feedback';\n  } else {\n    // Mostrar feedback\n    let correctCount = 0;\n    let totalQuestions = 0;\n\n    questionBlocks.forEach(block => {\n      totalQuestions++;\n      const textInput = block.querySelector('input[type=\"text\"]');\n      const numberInput = block.querySelector('input[type=\"number\"]'); // Novo: input num√©rico\n      const form = block.querySelector('form');\n\n      let questionId, userAnswer, correctAnswer, tolerance = 0;\n      let feedbackDivId;\n\n      if (textInput && textInput.dataset.correctAnswer) {\n        // Quest√£o de texto (T/F)\n        questionId = textInput.id;\n        userAnswer = textInput.value;\n        correctAnswer = textInput.dataset.correctAnswer;\n      } else if (numberInput && numberInput.dataset.correctAnswer) {\n        // Quest√£o num√©rica\n        questionId = numberInput.id;\n        // Converte para n√∫mero. Se n√£o for um n√∫mero v√°lido, NaN.\n        userAnswer = parseFloat(numberInput.value);\n        correctAnswer = parseFloat(numberInput.dataset.correctAnswer);\n        if (numberInput.dataset.tolerance) {\n          tolerance = parseFloat(numberInput.dataset.tolerance);\n        }\n        // Se a resposta do usu√°rio n√£o for um n√∫mero v√°lido, trate como incorreta\n        if (isNaN(userAnswer)) {\n             userAnswer = null; // Mant√©m como valor num√©rico inv√°lido\n        }\n      } else if (form && form.querySelector('input[type=\"radio\"]') && form.dataset.correctAnswer) {\n        // Quest√£o de m√∫ltipla escolha (radio)\n        questionId = form.querySelector('input[type=\"radio\"]').name;\n        userAnswer = getSelectedRadioValue(questionId);\n        correctAnswer = form.dataset.correctAnswer;\n      } else {\n        // Se n√£o for um tipo de quest√£o reconhecido ou n√£o tem resposta correta\n        totalQuestions--; // N√£o conta esta quest√£o no total se n√£o puder ser avaliada\n        return; // Pula para a pr√≥xima quest√£o\n      }\n\n      feedbackDivId = 'feedback-' + questionId;\n      const feedbackDiv = document.getElementById(feedbackDivId);\n\n      if (feedbackDiv) { // Apenas processa se h√° um feedback div\n        checkAnswerAndSetStatus(questionId, userAnswer, correctAnswer, feedbackDivId, tolerance);\n\n        // Agora, exibe e colore o feedback ap√≥s a verifica√ß√£o\n        if (feedbackDiv.dataset.status === 'correct') {\n          feedbackDiv.style.color = 'green';\n          correctCount++;\n        } else if (feedbackDiv.dataset.status === 'incorrect') {\n          feedbackDiv.style.color = 'red';\n        } else {\n          feedbackDiv.style.color = 'black'; // Se n√£o foi respondida ou n√£o tem status\n        }\n        feedbackDiv.style.display = 'block'; // Exibe o feedback\n      }\n    });\n\n    scoreDiv.textContent = `‚úÖ  You answered ${correctCount} out of  ${totalQuestions}  correctly.`;\n    toggleButton.textContent = 'Hide Feedback';\n  }\n}\n</script>\n\n<button id=\"toggle-feedback-btn\" onclick=\"toggleFeedback()\"\n  style=\"background-color:#007BFF; color:white; padding:8px 16px; border:none; border-radius:5px; cursor:pointer;\">\n  Show Feedback\n</button>\n<div id=\"score-summary\" style=\"margin-top: 15px; font-weight: bold;\"></div>\n\n\n</div>\n\n\n\n</div> <!-- Fecha #after-login-content -->\n\n<script>\n  // Garante que o conte√∫do protegido apare√ßa ap√≥s login\n  document.documentElement.classList.remove(\"locked\");\n</script>\n\n\n\n\n\n<div style=\"text-align: center; margin-top: 2rem;\">\n  <a href=\"/teaching/financial_strategy/\" class=\"btn btn-outline-primary btn-lg\">\n    üîô\n  </a>\n</div>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}